#!/bin/bash
# Alpha Hybrid Launcher
red() {
  printf '\e[1;31m%s\n\e[0;39;49m' "$@"
}

green() {
  printf '\e[1;32m%s\n\e[0;39;49m' "$@"
}
yellow() {
  printf '\e[1;33m%s\n\e[0;39;49m' "$@"
}
tgcli_version="180329-nightly"
luarocks_version=2.4.2
lualibs=(
'luasec'
'luarepl'
'lbase64 20120807-3'
'luafilesystem'
'lub' 
'luaexpat'
'redis-lua'
'lua-cjson'
'fakeredis'
'xml'
'feedparser'
'serpent'
)

today=`date +%F`
installp() {
sudo apt-get update 
sudo apt-get upgrade
sudo apt-get install git redis-server lua5.2 liblua5.2-dev lua-lgi libnotify-dev unzip tmux -y && add-apt-repository ppa:ubuntu-toolchain-r/test
sudo apt-get update 
sudo apt-get upgrade 
sudo apt-get install libconfig++9v5 libstdc++6 
sudo apt autoremove
sudo apt-get install gcc-4.9
sudo apt-get --yes install wget libconfig9 libjansson4 lua5.2 liblua5.2 make unzip git redis-server g++ whois fortune fortunes
sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
sudo apt-get install g++-4.7 -y c++-4.7 -y
sudo apt-get update
sudo apt-get upgrade
sudo apt-get install libreadline-dev -y libconfig-dev -y libssl-dev -y lua5.2 -y liblua5.2-dev -y lua-socket -y lua-sec -y lua-expat -y libevent-dev -y make unzip git redis-server autoconf g++ -y libjansson-dev -y libpython-dev -y expat libexpat1-dev -y
sudo apt-get install screen -y
sudo apt-get install tmux -y
sudo apt-get install libstdc++6 -y
sudo apt-get install lua-lgi -y
sudo apt-get install libnotify-dev -y
sudo apt install libconfig++9v5
sudo apt-get install software-properties-common
sudo add-apt-repository ppa:ubuntu-toolchain-r/test
sudo apt-get update
sudo apt install lua5.2 -y
sudo apt install luarocks
sudo luarocks install serpent
sudo luarocks install lua-cjson
luarocks install luasocket
sudo apt install screen -y
sudo apt install ufw -y
sudo ufw default allow incoming
sudo ufw default allow outgoing
sudo ufw allow ssh
sudo ufw allow http
sudo ufw allow https
sudo ufw enable 
sudo apt-get install gcc-4.9
sudo apt-get upgrade libstdc++6
sudo apt-get install libcurl-dev
sudo apt-get install libcurl4-openssl-dev
sudo apt-get install libcurl4-gnutls-dev
wget http://luarocks.org/releases/luarocks-2.2.2.tar.gz;tar zxpf luarocks-2.2.2.tar.gz;cd luarocks-2.2.2 && ./configure; sudo make bootstrap;sudo luarocks install luasocket;sudo luarocks install luasec;sudo luarocks install redis-lua;sudo luarocks install lua-term;sudo luarocks install serpent;sudo luarocks install dkjson;sudo luarocks install lanes;sudo luarocks install Lua-cURL
}
get_sub() {
local flag=false c count cr=$'\r' nl=$'\n'
while IFS='' read -d '' -rn 1 c; do
 if $flag; then
 printf '%c' "$c"
  else
if [[ $c != $cr && $c != $nl ]]; then
  count=0
 else
((count++))
 if ((count > 1)); then
flag=true
fi
fi
fi
 done
}
make_progress() {
exe=`lua <<-EOF
    print(tonumber($1)/tonumber($2)*100)
EOF
`
    echo ${exe:0:4}
}
 get_tgcli_version() {
	echo "$tgcli_version"
}
 download_libs_lua() {
    if [[ ! -d "logs" ]]; then mkdir logs; fi
    if [[ -f "logs/logluarocks_${today}.txt" ]]; then rm logs/logluarocks_${today}.txt; fi
    local i
    for ((i=0;i<${#lualibs[@]};i++)); do
        printf "\r\33[2K"
        printf "\r• Installing Luarocks: wait... [`make_progress $(($i+1)) ${#lualibs[@]}`%%] [$(($i+1))/${#lualibs[@]}] ${lualibs[$i]}"
        ./.luarocks/bin/luarocks install ${lualibs[$i]} &>> logs/logluarocks_${today}.txt
    done
printf "\n• Logfile created: $PWD/logs/logluarocks_${today}.txt\nDone\n"
rm -rf luarocks-2.2.2*
}
startbotlogo() {
sleep 1
clear
red "TeleBot V 5"
echo "███▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒10%"
sleep 0.3
yellow "██████▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒20%"
sleep 0.3
echo "█████████▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒30%"
sleep 0.3
yellow "████████████▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒40%"
sleep 0.3
echo "███████████████▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒50%"
sleep 0.3
yellow "██████████████████▒▒▒▒▒▒▒▒▒▒▒▒60%"
sleep 0.3
echo "█████████████████████▒▒▒▒▒▒▒▒▒70%"
sleep 0.3
yellow "████████████████████████▒▒▒▒▒▒80%"
sleep 0.3
echo "███████████████████████████▒▒▒90%"
 sleep 0.6
green "██████████████████████████████100%"
}
SetConfigApi() {
cat <<EOF > $HOME/.telegram-bot/RaminApi/Ramin.65
# api_Ramin
default_profile = "RaminApi";
RaminApi = {
lua_script = "$HOME/Gaurd/B.lua";
};
EOF
}
SetConfigCli() {
cat <<EOF > $HOME/.telegram-bot/RaminCli$1/Ramin.65
# cli$1_Ramin
default_profile = "RaminCli$1";
RaminCli$1 = {
lua_script = "$HOME/Gaurd/bot$1.lua";
};
EOF
}
chmodtelegram() {
sudo chmod 777 ./../.telegram-bot/*
sudo chmod 777 ./../.telegram-bot/RaminCli$1/*
sudo chmod 777 ./../.telegram-bot/RaminCli$1/data/*
sudo chmod 777 ./../.telegram-bot/RaminCli$1/files/*
echo "Done! > For Launch Bot $1 : screen ./bd cli$1"
}
 configtime() {
 cd ..
 sudo cp /usr/share/zoneinfo/Asia/Tehran /etc/localtime
 sudo apt install libconfig++9v5
 sudo apt-get install lua-lgi
 sudo apt-get install libnotify-dev
 sudo apt install speedtest-cli
 cd Gaurd
}
 config() {
    dir=$PWD
    wget http://luarocks.org/releases/luarocks-${luarocks_version}.tar.gz &>/dev/null
    tar zxpf luarocks-${luarocks_version}.tar.gz &>/dev/null
    cd luarocks-${luarocks_version}
    if [[ ${1} == "--no-null" ]]; then
        ./configure --prefix=$dir/.luarocks --sysconfdir=$dir/.luarocks/luarocks --force-config
        make bootstrap
    else
./configure --prefix=$dir/.luarocks --sysconfdir=$dir/.luarocks/luarocks --force-config &>/dev/null
make bootstrap &>/dev/null
fi
cd ..
if [[ ${1} != "--no-download" ]]; then
download_libs_lua
cd $HOME
cd Gaurd
wget --progress=bar:force https://valtman.name/files/telegram-bot-${tgcli_version}-linux --no-check-certificate
mv telegram-bot-${tgcli_version}-linux Tdbot; sudo chmod +x Tdbot
sudo chmod +x Gaurd
fi
for ((i=0;i<101;i++)); do
printf "\rConfiguring... [%i%%]" $i
sleep 0.007
done
mkdir $HOME/.telegram-bot
sudo rm -rf luarocks*
sudo rm -rf .luarocks
sudo rm -rf logs
printf "\nDone\nFor Login : ./bd login\nFor Run : screen ./bd autocli\n\n"
}
 lhelper() {
lua api.lua
 }
  lbot() { 
lua5.3 bot.lua
 }
   lcleaner() {
lua5.3 cleaner.lua
 }
 Autoc() {
 COUNTER=1
while(true) do
lua5.3 JokerCle.lua
let COUNTER=COUNTER+1 
done
 }
 
 Autoc2() {
 COUNTER=1
while(true) do
./Tdbot -c "$HOME"/.telegram-bot/RaminCli2/Ramin.65
let COUNTER=COUNTER+1 
done
 }
 Autoc3() {
 COUNTER=1
while(true) do
./Tdbot -c "$HOME"/.telegram-bot/RaminCli3/Ramin.65
let COUNTER=COUNTER+1 
done
 }
  Autoa() {
 COUNTER=1
while(true) do
lua5.3 JokerBot.lua
let COUNTER=COUNTER+1 
done
 }
  Autoh() {
 COUNTER=1
while(true) do
lua JokerApi.lua
let COUNTER=COUNTER+1 
done
 }
AutMu() {
COUNTER=1
while(true) do
python3 main.py
let COUNTER=COUNTER+1 
done
 }
screen() {
echo ""
echo ""
green "    >> Ｃｌｉ  Ｂｏｔ  Ｌａｕｎｃｈｅｄ !"
yellow "    Ɓσт Mѕgѕ :"
./Tdbot -c "$HOME"/.telegram-bot/RaminCli$1/Ramin.65

}
screenapi() {
echo ""
echo ""
green "    >> Ｃｌｉ  Ｂｏｔ  Ｌａｕｎｃｈｅｄ !"
yellow "    Ɓσт Mѕgѕ :"
./Tdbot -c "$HOME"/.telegram-bot/RaminApi/Ramin.65
}
lcli() {
rm -rf $HOME/.telegram-bot/RaminCli
mkdir $HOME/.telegram-bot/RaminCli
SetConfigCli
./Tdbot -p RaminCli --login --phone=${1}
} 
lcli2() {
rm -rf $HOME/.telegram-bot/RaminCli2
mkdir $HOME/.telegram-bot/RaminCli2
SetConfigCli 2
./Tdbot -p RaminCli2 --login --phone=${1}
}
lcli3() {
rm -rf $HOME/.telegram-bot/AlphaCli3
mkdir $HOME/.telegram-bot/AlphaCli3
SetConfigCli 3
./Tdbot -p RaminCli3 --login --phone=${1}
} 
lapi() {
rm -rf $HOME/.telegram-bot/RaminApi
mkdir $HOME/.telegram-bot/RaminApi
SetConfigApi
./Tdbot -p RaminApi --login --bot=${1}
}
function gitpull() { 
git checkout bd  bot/ libs/
git pull
echo chmod +x bd | /bin/bash
version=$(echo "./bd tgcli_version" | /bin/bash)
updateTD $version
}
updateTD() {
wget --progress=bar:force https://valtman.name/files/telegram-bot-${1}-linux --no-check-certificate 2>&1 | get_sub
mv telegram-bot-${1}-linux Tdbot; chmod +x Tdbot
}
CONFIG() {
TXT=(
"Installing Bot"
)
printf "${TXT}"
printf "\n"
}
warning() {
echo "Your Command Not Found!"
echo "Use The Following Commands :"
echo "install ➜ نصب سورس"
echo "cli ➜ راه اندازی ربات اصلی"
echo "cli2 ➜ راه اندازی ربات اصلی دوم"
echo "cli3 ➜ راه اندازی ربات اصلی سوم"
echo "helper ➜ راه اندازی ربات هلپر"
echo "api ➜ راه اندازی ربات کمکی"
echo "autocli ➜ اتولانچ ربات های اصلی"
echo "autoapi ➜ اتولانچ ربات کمکی"
echo "login ➜ تنظیم شماره برای ربات اصلی"
echo "login2 ➜ تنظیم شماره برای ربات اصلی دوم"
echo "login3 ➜ تنظیم شماره برای ربات اصلی سوم"
echo "loginapi ➜ تنظیم توکن برای ربات کمکی"
echo "srtconfig ➜ تنظیم کانفیگ ها"
echo "installp ➜ نصب پکیج های مورد نیاز سرور لینوکس"
}
case $1 in
install)
configtime
CONFIG
config ${2}
exit ;;
login)
echo "Enter Your Bot Number ...!"
echo "Exaple ➜ +989111111111"
read phone_number
lcli ${phone_number}
chmodtelegram
exit;;
login2)
echo "Enter Your Bot Number ...!"
echo "Exaple ➜ +989111111111"
read phone_number
lcli ${phone_number}
chmodtelegram 2
exit;;
login3)
echo "Enter Your Bot Number ...!"
echo "Exaple ➜ +989111111111"
read phone_number
lcli3 ${phone_number}
chmodtelegram 3
exit;;
loginapi)
echo "Send Your Bot Token !"
read TOKEN
lapi ${TOKEN}
echo 'Done! > For Launch Api : screen ./bd api'
exit;;
installp)
installp
exit;;
cli)
startbotlogo
screen
exit;; 
cli2)
startbotlogo
screen 2
exit;;
cli3)
startbotlogo
screen 3
exit;;
api)
startbotlogo
screenapi
exit;;
helper)
lhelper
exit;;
bot)
lbot
exit;;
cleaner)
lcleaner
exit;;
setconfig)
SetConfigApi 
SetConfigCli
exit;;
telebotcli)
Autoc
red "Start Auto Launch Cli...."
startbotlogo
echo ""
green "    >> Ａｕｔｏ  Ｌａｕｎｃｈ  Ｓｔａｒｔｅｄ !"
yellow "    Ɓσт Mѕgѕ :"
exit;;
autocli2)
Autoc2
red "Start Auto Launch Cli...."
startbotlogo
echo ""
green "    >> Ａｕｔｏ  Ｌａｕｎｃｈ  Ｓｔａｒｔｅｄ !"
yellow "    Ɓσт Mѕgѕ :"
exit;;
autocli3)
Autoc3
red "Start Auto Launch Cli...."
startbotlogo
echo ""
green "    >> Ａｕｔｏ  Ｌａｕｎｃｈ  Ｓｔａｒｔｅｄ !"
yellow "    Ɓσт Mѕgѕ :"
exit;;
telebotapi)
red "Start Auto Launch Api...."
startbotlogo
echo ""
green "    >> Ａｕｔｏ  Ｌａｕｎｃｈ  Ｓｔａｒｔｅｄ !"
yellow "    Ɓσт Mѕgѕ :"
Autoa
exit;;
telebothelper)
red "Start Auto Launch Api...."
startbotlogo
Autoh
exit;;
autovc)
red "Start Auto Launch Api...."
startbotlogo
AutMu
exit;; 
autoall)
tmux new-session -d -s "Main" "./Ramin telebotapi"
tmux detach -s "Bot"
tmux new-session -d -s "Helper" "./Ramin telebothelper"
tmux detach -s "Helper"
tmux new-session -d -s "Cleaner" "./Ramin autocli"
tmux detach -s "Cleaner"

exit;;
update)
gitpull
updateTD
exit ;;
tgcli_version)
get_tgcli_version
exit ;;
esac
warning
exit 0
 
